name: CI
on:
  - push
  - pull_request

jobs:
  php:
    name: Php
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Php extensions cache
        id: phpcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: 7.4
          extensions: pcov
          key: v1
      - name: Cache Php extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.phpcache.outputs.dir }}
          key: ${{ steps.phpcache.outputs.key }}
          restore-keys: ${{ steps.phpcache.outputs.key }}
      - name: Setup Php
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
      - name: Setup composer cache
        id: composercache
        run: echo ::set-output name=dir::$(composer config cache-files-dir)
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Setup PCOV
        run: pecl install pcov
      - name: Install dependencies
        run: composer install
      - name: CI
        run: make ci
      - name: Coverage
        env:
          COVERALLS_PARALLEL: true
          # [1] I have no fucking clue why this has to be GITHUB_TOKEN instead of COVERALLS_TOKEN ü§∑‚Äç
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: vendor/bin/php-coveralls --coverage_clover=temp/coverage/php/coverage.xml
  typescript:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm
      - name: Setup node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{steps.nvm.outputs.NODE_VERSION }}
      - name: Setup yarn cache
        id: yarncache
        run: echo ::set-output name=dir::$(yarn cache dir)
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarncache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install
      - name: CI
        run: yarn ci
      - name: Coverage
        env:
          COVERALLS_PARALLEL: true
          # [1] Here, it's working!
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: yarn coveralls < temp/coverage/ts/lcov.info
  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs:
      - php
      - typescript
    steps:
      - name: Coveralls
        run: curl -k coveralls.io/webhook?repo_token=${{ secrets.COVERALLS_TOKEN }} -d "payload[build_num]=${{ github.run_id }}&payload[status]=done"


