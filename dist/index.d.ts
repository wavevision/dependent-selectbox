// Generated by dts-bundle-generator v5.5.0

import { Extension, Naja } from 'naja';

declare class DependentSelectBox implements Extension {
	private domManager;
	readonly initialize: (naja: Naja) => void;
	readonly load: () => void;
	private readonly initParent;
}
export declare const DATA_DISALLOW_SUBMIT_WHEN_DISABLED = "data-disallow-submit-when-disabled";
export declare const DATA_LINK = "data-dependent-data-link";
export declare const DATA_PARENT_LISTENER = "data-has-dependent-listener";
export declare const DATA_PARENTS = "data-parents";
export declare const DATA_SELECT_BOX = "data-dependent-select-box";
export declare const EVENT_LOADED = "dependentSelectBoxLoaded";
export declare const EVENT_LOADING = "dependentSelectBoxLoading";
export declare const SELECT_BOX_SELECTOR: string;
export declare type DependentSelectBoxes = HTMLSelectElement[];
export declare type FormElement = HTMLInputElement | null;
export declare type Parents = Array<string>;
export declare type ParentValue = Array<number | string> | boolean | number | string | null;
export declare type ParentsValues = Record<string, ParentValue>;
export declare type Response = Record<string, {
	disabled: boolean;
	options: string;
}>;
export interface Request {
	trigger: string;
	values: ParentsValues;
}
export declare type DependentEvent<T> = CustomEvent<{
	form: HTMLFormElement;
	dependentSelectBoxes: DependentSelectBoxes;
} & T>;
export declare type LoadingEvent = DependentEvent<{
	request: Request;
}>;
export declare type LoadedEvent = DependentEvent<{
	response: Response;
}>;
export default DependentSelectBox;

export as namespace DependentSelectBox;

export {};
